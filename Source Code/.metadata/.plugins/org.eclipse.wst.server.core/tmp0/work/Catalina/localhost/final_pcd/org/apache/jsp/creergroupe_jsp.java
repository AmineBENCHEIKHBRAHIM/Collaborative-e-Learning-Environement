/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/7.0.52
 * Generated at: 2014-05-18 11:08:02 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import Domain.*;
import DAO.ForumBeanManager;
import java.util.*;
import DAO.ForumBeanManager;
import Domain.Utilisateur;

public final class creergroupe_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(2);
    _jspx_dependants.put("/taglibs.jsp", Long.valueOf(1399418393499L));
    _jspx_dependants.put("/verification.jsp", Long.valueOf(1399418393518L));
  }

  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fset_0026_005fvar_005fvalue_005fnobody;

  private javax.el.ExpressionFactory _el_expressionfactory;
  private org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public void _jspInit() {
    _005fjspx_005ftagPool_005fc_005fset_0026_005fvar_005fvalue_005fnobody = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
    _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
    _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
  }

  public void _jspDestroy() {
    _005fjspx_005ftagPool_005fc_005fset_0026_005fvar_005fvalue_005fnobody.release();
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=ISO-8859-1");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("    \r\n");
      out.write("  \r\n");
      out.write(" \r\n");
      out.write(" ");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write('\r');
      out.write('\n');
      if (_jspx_meth_c_005fset_005f0(_jspx_page_context))
        return;
      out.write('\r');
      out.write('\n');
      out.write(' ');
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write('\r');
      out.write('\n');
      if (_jspx_meth_c_005fset_005f1(_jspx_page_context))
        return;
      out.write("\r\n");
      out.write(" \r\n");
      out.write("  \r\n");

Object obj = session.getAttribute("session");
// attribut session ok, test si utilisateur courant la possède
if(obj != null)
{
	ForumBeanManager fbm = new ForumBeanManager();
	if(fbm.estMembre(obj.toString()) == false)
	{
		session.invalidate();

      out.write("\r\n");
      out.write("\t\t");
      if (true) {
        _jspx_page_context.forward("./login.jsp");
        return;
      }
      out.write('\r');
      out.write('\n');

	}
	// On récupère l'utilisateur courant et on l'attribut  à la session
	else
	{
		Utilisateur uCourant = fbm.getUtilisateur(obj.toString());
		session.setAttribute("user",uCourant);
	}

      out.write("\r\n");
      out.write("\t\r\n");

}
// Pas d'attribut session, redirection vers la page de login
else
{
	session.setAttribute("Erreur","L'accès au forum nécessite une authentification préalable !");

      out.write('\r');
      out.write('\n');
      out.write('	');
      if (true) {
        _jspx_page_context.forward("./login.jsp");
        return;
      }
      out.write('\r');
      out.write('\n');

}



      out.write("\r\n");
      out.write(" <script type=\"text/javascript\" src=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null, false));
      out.write("/js/main.js\"></script>  \r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html lang=\"en\">\r\n");
      out.write("<head>\r\n");
      out.write("\t<meta charset=\"utf-8\" />\r\n");
      out.write("\t<title>Image-less CSS3 Glowing Form Implementation</title>\r\n");
      out.write("\t<script src=\"https://ajax.googleapis.com/ajax/libs/jquery/1.5.1/jquery.min.js\"></script>\r\n");
      out.write("\t<script>\r\n");
      out.write("\t\t$(function(){\r\n");
      out.write("\t\t  var $form_inputs =   $('form input');\r\n");
      out.write("\t\t  var $rainbow_and_border = $('.rain, .border');\r\n");
      out.write("\t\t  /* Used to provide loping animations in fallback mode */\r\n");
      out.write("\t\t  $form_inputs.bind('focus', function(){\r\n");
      out.write("\t\t  \t$rainbow_and_border.addClass('end').removeClass('unfocus start');\r\n");
      out.write("\t\t  });\r\n");
      out.write("\t\t  $form_inputs.bind('blur', function(){\r\n");
      out.write("\t\t  \t$rainbow_and_border.addClass('unfocus start').removeClass('end');\r\n");
      out.write("\t\t  });\r\n");
      out.write("\t\t  $form_inputs.first().delay(800).queue(function() {\r\n");
      out.write("\t\t\t$(this).focus();\r\n");
      out.write("\t\t  });\r\n");
      out.write("\t\t});\r\n");
      out.write("\t</script>\r\n");
      out.write("\t\t<style>\r\n");
      out.write("\t\t\tbody{\r\n");
      out.write("\t\t\t\tbackground: #000;\r\n");
      out.write("\t\t\t\tcolor: #DDD;\r\n");
      out.write("\t\t\t\tfont-family: 'Helvetica', 'Lucida Grande', 'Arial', sans-serif;\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t\t.border,\r\n");
      out.write("\t\t\t.rain{\r\n");
      out.write("\t\t\t\theight: 170px;\r\n");
      out.write("\t\t\t\twidth: 320px;\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t\t/* Layout with mask */\r\n");
      out.write("\t\t\t.rain{\r\n");
      out.write("\t\t\t\t padding: 10px 12px 12px 10px;\r\n");
      out.write("\t\t\t\t -moz-box-shadow: 10px 10px 10px rgba(0,0,0,1) inset, -9px -9px 8px rgba(0,0,0,1) inset;\r\n");
      out.write("\t\t\t\t -webkit-box-shadow: 8px 8px 8px rgba(0,0,0,1) inset, -9px -9px 8px rgba(0,0,0,1) inset;\r\n");
      out.write("\t\t\t\t box-shadow: 8px 8px 8px rgba(0,0,0,1) inset, -9px -9px 8px rgba(0,0,0,1) inset;\r\n");
      out.write("\t\t\t\t margin: 100px auto;\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t\t/* Artifical \"border\" to clear border to bypass mask */\r\n");
      out.write("\t\t\t.border{\r\n");
      out.write("\t\t\t\tpadding: 1px;\r\n");
      out.write("\t\t\t\t-moz-border-radius: 5px;\r\n");
      out.write("\t\t\t    -webkit-border-radius: 5px;\r\n");
      out.write("\t\t\t\tborder-radius: 5px;\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\r\n");
      out.write("\t\t\t.border,\r\n");
      out.write("\t\t\t.rain,\r\n");
      out.write("\t\t\t.border.start,\r\n");
      out.write("\t\t\t.rain.start{\r\n");
      out.write("\t\t\t\tbackground-repeat: repeat-x, repeat-x, repeat-x, repeat-x;\r\n");
      out.write("\t\t\t\tbackground-position: 0 0, 0 0, 0 0, 0 0;\r\n");
      out.write("\t\t\t\t/* Blue-ish Green Fallback for Mozilla */\r\n");
      out.write("\t\t\t\tbackground-image: -moz-linear-gradient(left, #09BA5E 0%, #00C7CE 15%, #3472CF 26%, #00C7CE 48%, #0CCF91 91%, #09BA5E 100%);\r\n");
      out.write("\t\t\t\t/* Add \"Highlight\" Texture to the Animation */\r\n");
      out.write("\t\t\t\tbackground-image: -webkit-gradient(linear, left top, right top, color-stop(1%,rgba(0,0,0,.3)), color-stop(23%,rgba(0,0,0,.1)), color-stop(40%,rgba(255,231,87,.1)), color-stop(61%,rgba(255,231,87,.2)), color-stop(70%,rgba(255,231,87,.1)), color-stop(80%,rgba(0,0,0,.1)), color-stop(100%,rgba(0,0,0,.25)));\r\n");
      out.write("\t\t\t\t/* Starting Color */\r\n");
      out.write("\t\t\t\tbackground-color: #39f;\r\n");
      out.write("\t\t\t\t/* Just do something for IE-suck */\r\n");
      out.write("\t\t\t\tfilter: progid:DXImageTransform.Microsoft.gradient( startColorstr='#00BA1B', endColorstr='#00BA1B',GradientType=1 );\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\t/* Non-keyframe fallback animation */\r\n");
      out.write("\t\t\t.border.end,\r\n");
      out.write("\t\t\t.rain.end{\r\n");
      out.write("\t\t\t\t-moz-transition-property: background-position;  \r\n");
      out.write("\t\t\t\t-moz-transition-duration: 30s;\r\n");
      out.write("\t\t\t\t-moz-transition-timing-function: linear;\r\n");
      out.write("\t\t\t\t-webkit-transition-property: background-position;  \r\n");
      out.write("\t\t\t\t-webkit-transition-duration: 30s;  \r\n");
      out.write("\t\t\t\t-webkit-transition-timing-function: linear;\r\n");
      out.write("\t\t\t\t-o-transition-property: background-position;  \r\n");
      out.write("\t\t\t\t-o-transition-duration: 30s;  \r\n");
      out.write("\t\t\t\t-o-transition-timing-function: linear;\r\n");
      out.write("\t\t\t\ttransition-property: background-position;  \r\n");
      out.write("\t\t\t\ttransition-duration: 30s;  \r\n");
      out.write("\t\t\t\ttransition-timing-function: linear;\r\n");
      out.write("\t\t\t\tbackground-position: -5400px 0, -4600px 0, -3800px 0, -3000px 0;\t\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\t/* Keyfram-licious animation */\r\n");
      out.write("\t\t\t@-webkit-keyframes colors {\r\n");
      out.write("\t\t\t    0% {background-color: #39f;}\r\n");
      out.write("\t\t\t    15% {background-color: #F246C9;}\r\n");
      out.write("\t\t\t    30% {background-color: #4453F2;}\r\n");
      out.write("\t\t\t    45% {background-color: #44F262;}\r\n");
      out.write("\t\t\t    60% {background-color: #F257D4;}\r\n");
      out.write("\t\t\t    75% {background-color: #EDF255;}\r\n");
      out.write("\t\t\t    90% {background-color: #F20006;}\r\n");
      out.write("\t\t\t    100% {background-color: #39f;}\r\n");
      out.write("\t\t    }\r\n");
      out.write("\t\t    .border,.rain{\r\n");
      out.write("\t\t\t    -webkit-animation-direction: normal;\r\n");
      out.write("\t\t\t    -webkit-animation-duration: 20s;\r\n");
      out.write("\t\t\t    -webkit-animation-iteration-count: infinite;\r\n");
      out.write("\t\t\t    -webkit-animation-name: colors;\r\n");
      out.write("\t\t\t    -webkit-animation-timing-function: ease;\r\n");
      out.write("\t\t    }\r\n");
      out.write("\t\t    \r\n");
      out.write("\t\t    /* In-Active State Style */\r\n");
      out.write("\t\t\t.border.unfocus{\r\n");
      out.write("\t\t\t\tbackground: #333 !important;\t\r\n");
      out.write("\t\t\t\t -moz-box-shadow: 0px 0px 15px rgba(255,255,255,.2);\r\n");
      out.write("\t\t\t\t -webkit-box-shadow: 0px 0px 15px rgba(255,255,255,.2);\r\n");
      out.write("\t\t\t\t box-shadow: 0px 0px 15px rgba(255,255,255,.2);\r\n");
      out.write("\t\t\t\t -webkit-animation-name: none;\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t\t.rain.unfocus{\r\n");
      out.write("\t\t\t\tbackground: #000 !important;\t\r\n");
      out.write("\t\t\t\t-webkit-animation-name: none;\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\t/* Regular Form Styles */\r\n");
      out.write("\t\t\tform{\r\n");
      out.write("\t\t\t\tbackground: #212121;\r\n");
      out.write("\t\t\t\t-moz-border-radius: 5px;\r\n");
      out.write("\t\t\t\t-webkit-border-radius: 5px;\r\n");
      out.write("\t\t\t    border-radius: 5px;\r\n");
      out.write("\t\t\t\theight: 100%;\r\n");
      out.write("\t\t\t\twidth: 100%;\r\n");
      out.write("\t\t\t\tbackground: -moz-radial-gradient(50% 46% 90deg,circle closest-corner, #242424, #090909);\r\n");
      out.write("\t\t\t\tbackground: -webkit-gradient(radial, 50% 50%, 0, 50% 50%, 150, from(#242424), to(#090909));\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t\tform label{\r\n");
      out.write("\t\t\t\tdisplay: block;\r\n");
      out.write("\t\t\t\tpadding: 10px 10px 5px 15px;\r\n");
      out.write("\t\t\t\tfont-size: 11px;\r\n");
      out.write("\t\t\t\tcolor: #777;\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t\tform input{\r\n");
      out.write("\t\t\t\tdisplay: block;\r\n");
      out.write("\t\t\t\tmargin: 5px 10px 10px 15px;\r\n");
      out.write("\t\t\t\twidth: 85%;\r\n");
      out.write("\t\t\t\tbackground: #111;\r\n");
      out.write("\t\t\t\t-moz-box-shadow: 0px 0px 4px #000 inset;\r\n");
      out.write("\t\t\t\t-webkit-box-shadow: 0px 0px 4px #000 inset;\r\n");
      out.write("\t\t\t\tbox-shadow: 0px 0px 4px #000 inset;\r\n");
      out.write("\t\t\t\toutline: 1px solid #333;\r\n");
      out.write("\t\t\t\tborder: 1px solid #000;\r\n");
      out.write("\t\t\t\tpadding: 5px;\r\n");
      out.write("\t\t\t\tcolor: #444;\r\n");
      out.write("\t\t\t\tfont-size: 16px;\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t\tform input:focus{\r\n");
      out.write("\t\t\t\toutline: 1px solid #555;\r\n");
      out.write("\t\t\t\tcolor: #FFF;\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t\tinput[type=\"submit\"]{\r\n");
      out.write("\t\t\t\tcolor: #999;\r\n");
      out.write("\t\t\t\tpadding: 5px 10px;\r\n");
      out.write("\t\t\t\tfloat: right;\r\n");
      out.write("\t\t\t\tmargin: 20px 0;\r\n");
      out.write("\t\t\t\tborder: 1px solid #000;\r\n");
      out.write("\t\t\t\tfont-weight: lighter;\r\n");
      out.write("\t\t\t\t-moz-border-radius: 15px;\r\n");
      out.write("\t\t\t    -webkit-border-radius: 15px;\r\n");
      out.write("\t\t\t\tborder-radius: 15px;\r\n");
      out.write("\t\t\t\tbackground: #45484d;\r\n");
      out.write("\t\t\t\tbackground: -moz-linear-gradient(top, #222 0%, #111 100%);\r\n");
      out.write("\t\t\t\tbackground: -webkit-gradient(linear, left top, left bottom, color-stop(0%,#222), color-stop(100%,#111));\r\n");
      out.write("\t\t\t\tfilter: progid:DXImageTransform.Microsoft.gradient( startColorstr='#22222', endColorstr='#11111',GradientType=0 );\r\n");
      out.write("\t\t\t\t-moz-box-shadow: 0px 1px 1px #000, 0px 1px 0px rgba(255,255,255,.3) inset;\r\n");
      out.write("\t\t\t\t-webkit-box-shadow: 0px 1px 1px #000, 0px 1px 0px rgba(255,255,255,.3) inset;\r\n");
      out.write("\t\t\t\tbox-shadow: 0px 1px 1px #000,0px 1px 0px rgba(255,255,255,.3) inset;\r\n");
      out.write("\t\t\t\ttext-shadow: 0 1px 1px #000;\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t</style>\r\n");
      out.write("\t\t\r\n");
      out.write("\t</head>\r\n");
      out.write("\t<body id=\"home\">\r\n");
      out.write("\t\t<div class=\"rain\">\r\n");
      out.write("\t\t\t<div class=\"border start\">\r\n");
      out.write("\t\t\t");
ForumBeanManager fbm = new ForumBeanManager();
			 Utilisateur u = (Utilisateur)session.getAttribute("user"); 
      out.write("\r\n");
      out.write("\t\t\t\t<form action=\"ValidateGroup\" method=\"post\">\r\n");
      out.write("\t\t\t\t\t<label for=\"nom\">Nom du Groupe</label>\r\n");
      out.write("\t\t\t\t\t<input name=\"nom\" type=\"text\" placeholder=\"nom\"/>\r\n");
      out.write("\t\t\t\t\t<label for=\"description\">Description</label>\r\n");
      out.write("\t\t\t\t\t<input name=\"description\" type=\"text\" placeholder=\"description\"/>\r\n");
      out.write("\t\t\t\t\t<input name=\"coordinateur\" type=\"hidden\" value=\"");
      out.print( u.getIdUtilisateur());
      out.write("\" placeholder=\"coordinateur\"/>\r\n");
      out.write("                                        <input type=\"submit\" value=\"CREATE GROUP\"/>\r\n");
      out.write("\t\t\t\t</form>\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try { out.clearBuffer(); } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }

  private boolean _jspx_meth_c_005fset_005f0(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:set
    org.apache.taglibs.standard.tag.rt.core.SetTag _jspx_th_c_005fset_005f0 = (org.apache.taglibs.standard.tag.rt.core.SetTag) _005fjspx_005ftagPool_005fc_005fset_0026_005fvar_005fvalue_005fnobody.get(org.apache.taglibs.standard.tag.rt.core.SetTag.class);
    _jspx_th_c_005fset_005f0.setPageContext(_jspx_page_context);
    _jspx_th_c_005fset_005f0.setParent(null);
    // /taglibs.jsp(7,0) name = var type = java.lang.String reqTime = false required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
    _jspx_th_c_005fset_005f0.setVar("ctx");
    // /taglibs.jsp(7,0) name = value type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
    _jspx_th_c_005fset_005f0.setValue((java.lang.Object) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.Object.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null, false));
    int _jspx_eval_c_005fset_005f0 = _jspx_th_c_005fset_005f0.doStartTag();
    if (_jspx_th_c_005fset_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
      _005fjspx_005ftagPool_005fc_005fset_0026_005fvar_005fvalue_005fnobody.reuse(_jspx_th_c_005fset_005f0);
      return true;
    }
    _005fjspx_005ftagPool_005fc_005fset_0026_005fvar_005fvalue_005fnobody.reuse(_jspx_th_c_005fset_005f0);
    return false;
  }

  private boolean _jspx_meth_c_005fset_005f1(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:set
    org.apache.taglibs.standard.tag.rt.core.SetTag _jspx_th_c_005fset_005f1 = (org.apache.taglibs.standard.tag.rt.core.SetTag) _005fjspx_005ftagPool_005fc_005fset_0026_005fvar_005fvalue_005fnobody.get(org.apache.taglibs.standard.tag.rt.core.SetTag.class);
    _jspx_th_c_005fset_005f1.setPageContext(_jspx_page_context);
    _jspx_th_c_005fset_005f1.setParent(null);
    // /taglibs.jsp(7,0) name = var type = java.lang.String reqTime = false required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
    _jspx_th_c_005fset_005f1.setVar("ctx");
    // /taglibs.jsp(7,0) name = value type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
    _jspx_th_c_005fset_005f1.setValue((java.lang.Object) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.Object.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null, false));
    int _jspx_eval_c_005fset_005f1 = _jspx_th_c_005fset_005f1.doStartTag();
    if (_jspx_th_c_005fset_005f1.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
      _005fjspx_005ftagPool_005fc_005fset_0026_005fvar_005fvalue_005fnobody.reuse(_jspx_th_c_005fset_005f1);
      return true;
    }
    _005fjspx_005ftagPool_005fc_005fset_0026_005fvar_005fvalue_005fnobody.reuse(_jspx_th_c_005fset_005f1);
    return false;
  }
}
